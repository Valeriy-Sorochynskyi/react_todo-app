{"version":3,"sources":["components/Todo/Todo.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["Todo","state","currentValue","isEditing","textInput","React","createRef","startEdit","setState","props","text","current","focus","handleChange","event","target","value","handleKeyPress","id","key","onTextChanged","blurHandler","this","done","toggleItem","onDelete","onDoubleClick","className","cx","completed","editing","type","checked","onChange","htmlFor","onClick","onKeyPress","onBlur","ref","Component","TodoList","todos","map","todo","App","newItemText","checkedAll","sortBy","checkAll","handleDelete","filter","currentTodo","prevState","every","newTodos","handleAddItem","preventDefault","addItem","changeText","todosFilter","clickHandler","name","clearCompleted","trim","newItem","uuid","activeTodos","onSubmit","placeholder","length","href","some","ReactDOM","render","document","getElementById"],"mappings":"wUAIaA,EAAb,2MACEC,MAAQ,CACNC,aAAc,GACdC,WAAW,GAHf,EAMEC,UAAYC,IAAMC,YANpB,EAQEC,UAAY,WACV,EAAKC,SAAS,CACZL,WAAW,EACXD,aAAc,EAAKO,MAAMC,OACxB,WACD,EAAKN,UAAUO,QAAQC,YAb7B,EAiBEC,aAAe,SAACC,GACd,EAAKN,SAAS,CACZN,aAAcY,EAAMC,OAAOC,SAnBjC,EAuBEC,eAAiB,SAACH,EAAOI,GACL,UAAdJ,EAAMK,MAIV,EAAKV,MAAMW,cAAcF,EAAI,EAAKjB,MAAMC,cAExC,EAAKM,SAAS,CACZN,aAAc,GACdC,WAAW,MAhCjB,EAoCEkB,YAAc,SAACH,GACb,EAAKT,MAAMW,cAAcF,EAAI,EAAKjB,MAAMC,cAExC,EAAKM,SAAS,CACZN,aAAc,GACdC,WAAW,KAzCjB,wEA6CY,IAAD,SAC6BmB,KAAKrB,MAAjCE,EADD,EACCA,UAAWD,EADZ,EACYA,aADZ,EAE0CoB,KAAKb,MAA9CS,EAFD,EAECA,GAAIK,EAFL,EAEKA,KAAMb,EAFX,EAEWA,KAAMc,EAFjB,EAEiBA,WAAYC,EAF7B,EAE6BA,SAEpC,OACE,wBACEC,cAAeJ,KAAKf,UACpBoB,UAAWC,EAAG,CACZC,UAAWN,EACXO,QAAS3B,KAGX,yBAAKwB,UAAU,QACb,2BACEI,KAAK,WACLJ,UAAU,SACVT,GAAE,eAAUA,GACZc,QAAST,EACTU,SAAU,kBAAMT,EAAWN,MAE7B,2BAAOgB,QAAO,eAAUhB,IAAOR,GAC/B,4BACEqB,KAAK,SACLJ,UAAU,UACVQ,QAAS,kBAAMV,EAASP,OAG3Bf,GACC,2BACE4B,KAAK,OACLJ,UAAU,OACVX,MAAOd,EACP+B,SAAUX,KAAKT,aACfuB,WAAY,SAAAtB,GAAK,OAAI,EAAKG,eAAeH,EAAOI,IAChDmB,OAAQ,kBAAM,EAAKhB,YAAYH,IAC/BoB,IAAKhB,KAAKlB,iBAhFtB,GAA0BC,IAAMkC,WCAnBC,EAAW,SAAC/B,GAAW,IAEhCgC,EAIEhC,EAJFgC,MACAjB,EAGEf,EAHFe,WACAC,EAEEhB,EAFFgB,SACAL,EACEX,EADFW,cAGF,OACE,wBAAIO,UAAU,aACXc,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACExB,IAAKwB,EAAKzB,GACVA,GAAIyB,EAAKzB,GACTR,KAAMiC,EAAKjC,KACXa,KAAMoB,EAAKpB,KACXC,WAAYA,EACZC,SAAUA,EACVL,cAAeA,SC4NVwB,E,2MA7Ob3C,MAAQ,CACNwC,MAAO,CACL,CACElB,MAAM,EACNL,GAAI,IACJR,KAAM,eAER,CACEa,MAAM,EACNL,GAAI,IACJR,KAAM,aAGVmC,YAAa,GACbC,YAAY,EACZC,OAAQ,I,EAGVC,SAAW,YAAiB,IAAdjC,EAAa,EAAbA,OACZ,EAAKP,UAAS,YAA4B,IAAzBiC,EAAwB,EAAxBA,MAAOK,EAAiB,EAAjBA,WAMtB,MAAO,CACLL,MANeA,EAAMC,KAAI,SAAAC,GAAI,sBAC1BA,EAD0B,CAE7BpB,KAAMR,EAAOiB,aAKbc,YAAaA,O,EAKnBjC,aAAe,YAAiB,IAAdE,EAAa,EAAbA,OAChB,EAAKP,SAAS,CACZqC,YAAa9B,EAAOC,S,EAIxBiC,aAAe,SAAC/B,GACd,EAAKV,UAAS,kBAAgB,CAC5BiC,MADY,EAAGA,MACFS,QAAO,SAAAC,GAAW,OAAIA,EAAYjC,KAAOA,SACpD,WACF,EAAKV,UAAS,SAAA4C,GAAS,MAAK,CAC1BN,WAAYM,EAAUX,MAAMY,OAAM,SAAAV,GAAI,OAAIA,EAAKpB,gB,EAKrDC,WAAa,SAACN,GACZ,EAAKV,UAAS,YAAgB,IACtB8C,EADqB,EAAZb,MACQC,KAAI,SAACC,GAC1B,OAAIA,EAAKzB,KAAOA,EACP,eACFyB,EADL,CAEEpB,MAAOoB,EAAKpB,OAIToB,KAGHG,EAAaQ,EAASD,OAAM,SAAAV,GAAI,OAAkB,IAAdA,EAAKpB,QAE/C,MAAO,CACLkB,MAAOa,EACPR,kB,EAKNS,cAAgB,SAACzC,GACfA,EAAM0C,iBACN,EAAKC,QAAQ,EAAKxD,MAAM4C,c,EAG1Ba,WAAa,SAACxC,EAAIR,GAChB,EAAKF,UAAS,YAYZ,MAAO,CACLiC,MAbyB,EAAZA,MACQC,KAAI,SAACC,GAC1B,OAAIA,EAAKzB,KAAOA,EACP,eACFyB,EADL,CAEEjC,SAIGiC,U,EASbgB,YAAc,SAAClB,EAAOM,GACpB,OAAQA,GACN,IAAK,YACH,OAAON,EAAMS,QAAO,SAAAP,GAAI,OAAIA,EAAKpB,QACnC,IAAK,SACH,OAAOkB,EAAMS,QAAO,SAAAP,GAAI,OAAKA,EAAKpB,QACpC,QACE,OAAOkB,I,EAIbmB,aAAe,SAAC9C,GACd,IAAMiC,EAASjC,EAAMC,OAAO8C,KAE5B,EAAKrD,SAAS,CACZuC,Y,EAIJe,eAAiB,WACf,EAAKtD,UAAS,kBAAgB,CAC5BiC,MADY,EAAGA,MACFS,QAAO,SAAAP,GAAI,OAAKA,EAAKpB,QAClCuB,YAAY,O,uEAIRpC,GACc,KAAhBA,EAAKqD,QAITzC,KAAKd,UAAS,YAAgB,IAAbiC,EAAY,EAAZA,MACTuB,EAAU,CACd9C,GAAI+C,MACJ1C,MAAM,EACNb,QAGF,MAAO,CACL+B,MAAM,GAAD,mBAAMA,GAAN,CAAauB,IAClBnB,YAAa,GACbC,YAAY,Q,+BAKR,IAAD,EAC4CxB,KAAKrB,MAAhDwC,EADD,EACCA,MAAOI,EADR,EACQA,YAAaC,EADrB,EACqBA,WAAYC,EADjC,EACiCA,OAClCmB,EAAczB,EAAMS,QAAO,SAAAP,GAAI,OAAKA,EAAKpB,QAG/C,OACE,6BAASI,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,0BAAMwC,SAAU7C,KAAKiC,eACnB,2BACE5B,UAAU,WACVyC,YAAY,yBACZpD,MAAO6B,EACPZ,SAAUX,KAAKT,iBAKrB,6BAASc,UAAU,QAChBc,EAAM4B,OAEH,oCACE,2BACEtC,KAAK,WACLb,GAAG,aACHc,QAASc,EACTnB,UAAU,aACVM,SAAUX,KAAK0B,WAEjB,2BAAOd,QAAQ,cAAf,yBAKF,KACJ,kBAAC,EAAD,CACEO,MAAOnB,KAAKqC,YAAYlB,EAAOM,GAC/BtB,SAAUH,KAAK2B,aACfzB,WAAYF,KAAKE,WACjBJ,cAAeE,KAAKoC,cAIxB,4BAAQ/B,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACMuC,EAAYG,OADlB,gBAIA,wBAAI1C,UAAU,WACZ,4BACE,uBACEQ,QAASb,KAAKsC,aACdU,KAAK,KACL3C,UAAU,WACVkC,KAAK,OAJP,QAUF,4BACE,uBACE1B,QAASb,KAAKsC,aACdU,KAAK,WACLT,KAAK,UAHP,WASF,4BACE,uBACE1B,QAASb,KAAKsC,aACdU,KAAK,cACLT,KAAK,aAHP,eASHpB,EAAM8B,MAAK,SAAA5B,GAAI,OAAkB,IAAdA,EAAKpB,SAErB,4BACEQ,KAAK,SACLJ,UAAU,kBACVQ,QAASb,KAAKwC,gBAHhB,yB,GAhOIzD,IAAMkC,WCExBiC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d867a69f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\n\nexport class Todo extends React.Component {\n  state = {\n    currentValue: '',\n    isEditing: false,\n  }\n\n  textInput = React.createRef();\n\n  startEdit = () => {\n    this.setState({\n      isEditing: true,\n      currentValue: this.props.text,\n    }, () => {\n      this.textInput.current.focus();\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      currentValue: event.target.value,\n    });\n  }\n\n  handleKeyPress = (event, id) => {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    this.props.onTextChanged(id, this.state.currentValue);\n\n    this.setState({\n      currentValue: '',\n      isEditing: false,\n    });\n  }\n\n  blurHandler = (id) => {\n    this.props.onTextChanged(id, this.state.currentValue);\n\n    this.setState({\n      currentValue: '',\n      isEditing: false,\n    });\n  }\n\n  render() {\n    const { isEditing, currentValue } = this.state;\n    const { id, done, text, toggleItem, onDelete } = this.props;\n\n    return (\n      <li\n        onDoubleClick={this.startEdit}\n        className={cx({\n          completed: done,\n          editing: isEditing,\n        })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${id}`}\n            checked={done}\n            onChange={() => toggleItem(id)}\n          />\n          <label htmlFor={`todo-${id}`}>{text}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onDelete(id)}\n          />\n        </div>\n        {isEditing && (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            value={currentValue}\n            onChange={this.handleChange}\n            onKeyPress={event => this.handleKeyPress(event, id)}\n            onBlur={() => this.blurHandler(id)}\n            ref={this.textInput}\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  id: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  toggleItem: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onTextChanged: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { arrayOf } from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const {\n    todos,\n    toggleItem,\n    onDelete,\n    onTextChanged,\n  } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          done={todo.done}\n          toggleItem={toggleItem}\n          onDelete={onDelete}\n          onTextChanged={onTextChanged}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    done: PropTypes.bool,\n    text: PropTypes.string,\n  })).isRequired,\n  toggleItem: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onTextChanged: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport uuid from 'react-uuid';\nimport { TodoList } from './components/TodoList/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [\n      {\n        done: false,\n        id: '1',\n        text: 'do exercise',\n      },\n      {\n        done: true,\n        id: '2',\n        text: 'buy milk',\n      },\n    ],\n    newItemText: '',\n    checkedAll: false,\n    sortBy: '',\n  }\n\n  checkAll = ({ target }) => {\n    this.setState(({ todos, checkedAll }) => {\n      const newTodos = todos.map(todo => ({\n        ...todo,\n        done: target.checked,\n      }));\n\n      return {\n        todos: newTodos,\n        checkedAll: !checkedAll,\n      };\n    });\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      newItemText: target.value,\n    });\n  }\n\n  handleDelete = (id) => {\n    this.setState(({ todos }) => ({\n      todos: todos.filter(currentTodo => currentTodo.id !== id),\n    }), () => {\n      this.setState(prevState => ({\n        checkedAll: prevState.todos.every(todo => todo.done),\n      }));\n    });\n  };\n\n  toggleItem = (id) => {\n    this.setState(({ todos }) => {\n      const newTodos = todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            done: !todo.done,\n          };\n        }\n\n        return todo;\n      });\n\n      const checkedAll = newTodos.every(todo => todo.done === true);\n\n      return {\n        todos: newTodos,\n        checkedAll,\n      };\n    });\n  }\n\n  handleAddItem = (event) => {\n    event.preventDefault();\n    this.addItem(this.state.newItemText);\n  }\n\n  changeText = (id, text) => {\n    this.setState(({ todos }) => {\n      const newItems = todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            text,\n          };\n        }\n\n        return todo;\n      });\n\n      return {\n        todos: newItems,\n      };\n    });\n  };\n\n  todosFilter = (todos, sortBy) => {\n    switch (sortBy) {\n      case 'completed':\n        return todos.filter(todo => todo.done);\n      case 'active':\n        return todos.filter(todo => !todo.done);\n      default:\n        return todos;\n    }\n  };\n\n  clickHandler = (event) => {\n    const sortBy = event.target.name;\n\n    this.setState({\n      sortBy,\n    });\n  };\n\n  clearCompleted = () => {\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => !todo.done),\n      checkedAll: false,\n    }));\n  };\n\n  addItem(text) {\n    if (text.trim() === '') {\n      return;\n    }\n\n    this.setState(({ todos }) => {\n      const newItem = {\n        id: uuid(),\n        done: false,\n        text,\n      };\n\n      return {\n        todos: [...todos, newItem],\n        newItemText: '',\n        checkedAll: false,\n      };\n    });\n  }\n\n  render() {\n    const { todos, newItemText, checkedAll, sortBy } = this.state;\n    const activeTodos = todos.filter(todo => !todo.done);\n    // const filteredTodos = this.todosFilter(todos, sortBy);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleAddItem}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={newItemText}\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          {todos.length\n            ? (\n              <>\n                <input\n                  type=\"checkbox\"\n                  id=\"toggle-all\"\n                  checked={checkedAll}\n                  className=\"toggle-all\"\n                  onChange={this.checkAll}\n                />\n                <label htmlFor=\"toggle-all\">\n                    Mark all as complete\n                </label>\n              </>\n            )\n            : null}\n          <TodoList\n            todos={this.todosFilter(todos, sortBy)}\n            onDelete={this.handleDelete}\n            toggleItem={this.toggleItem}\n            onTextChanged={this.changeText}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${activeTodos.length} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                onClick={this.clickHandler}\n                href=\"#/\"\n                className=\"selected\"\n                name=\"all\"\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                onClick={this.clickHandler}\n                href=\"#/active\"\n                name=\"active\"\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                onClick={this.clickHandler}\n                href=\"#/completed\"\n                name=\"completed\"\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n          {todos.some(todo => todo.done === true)\n            && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={this.clearCompleted}\n              >\n                Clear completed\n              </button>\n            )}\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}